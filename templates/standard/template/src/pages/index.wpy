<style lang="less">
  input {
    border: 1rpx solid #ccc;
    display: inline-block;
    width: 200rpx;
    border-radius: 5rpx;
  }
  .info {
    padding-right: 10rpx;
  }
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <div class="container">
    <div class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <div class="userinfo-nickname">{{ userInfo.nickName }}</div>
    </div>

    <panel>
      <div class="title" slot="title">测试数据绑定</div>

      <text class="info" @tap="normalTitle = '已被修改'">{{normalTitle}}</text>
      <text class="info">{{setTimeoutTitle}}</text>
      <text class="info" @tap="mixintap">{{mixin}}</text>
      <text class="info">{{testcomputed}}</text>
      {{#redux}}
      <text class="info">{{num}}</text>
      <text class="info">{{asyncNum}}</text>
      <text class="info">{{sumNum}}</text>
      {{/redux}}
    </panel>

    <panel>
      <div class="title" slot="title">其它测试</div>
      <button @tap="toast" size="mini">第三方组件</button>
      <button @tap="communicate" size="mini">组件通信</button>
      <button @tap="tap" size="mini">混合TAP事件</button>
    </panel>

    <panel>
      <div class="title" slot="title">测试并发网络请求</div>
      <div>返回结果: <text>{{netrst}}</text></div>
      <button @tap="request" size="mini"> 点我发起10个请求 </button>
    </panel>

     <panel>
       <div class="title" slot="title">测试 v-model</div>
       <div style="display: flex; align-items: center;">
         <input v-model="inputmodel" />
         <text style="margin-left: 30rpx;">Value: {{inputmodel}}</text>
       </div>
     </panel>

    <panel>
      <div class="title" slot="title">测试组件</div>

      <text class="testcounter">全局计数器：</text>
      <div class="counterview">
        <button @tap="mynum++" size="mini">全局计数器: {{mynum}}</button>
      </div>

      <text class="testcounter">计数组件1 - num: </text>
      <div class="counterview">

        <counter @index-emit.user="counterEmit" />
      </div>

      <text class="testcounter">计数组件2 - num.sync: </text>

      <div class="counterview">
        <counter :num.sync="mynum"></counter>
      </div>
    </panel>

    <panel>
      <div class="title" slot="title">测试组件Repeat</div>
      <div v-for="(item, index) in groupList">
        <group :grouplist="item" :indexa="index"></group>
      </div>
    </panel>

    <panel>
      <div class="title" slot="title">测试列表</div>
      <list></list>
    </panel>

    <!--toast /-->
  </div>
</template>

<script>
  import wepy from '@wepy/core'
  {{#redux}}
  import { connect } from 'wepy-redux'
  {{/redux}}
  import testMixin from '../mixins/test'

  {{#redux}}
  @connect({
    num (state) {
      return state.counter.num
    },
    asyncNum (state) {
      return state.counter.asyncNum
    },
    sumNum (state) {
      return state.counter.num + state.counter.asyncNum
    }
  })
  {{/redux}}

  wepy.page({
    config: {
      navigationBarTitleText: 'test'
    },

    mixins: [testMixin],

    data: {
      inputmodel: 'v-model',
      mynum: 20,
      userInfo: {
        nickName: '加载中...'
      },
      normalTitle: '原始标题',
      setTimeoutTitle: '标题三秒后会被修改',
      count: 0,
      netrst: '',
      groupList: [
        {
          id: 1,
          name: '点击改变',
          list: [
            {
              childid: '1.1',
              childname: '子项，点我改变'
            }, {
              childid: '1.2',
              childname: '子项，点我改变'
            }, {
              childid: '1.3',
              childname: '子项，点我改变'
            }
          ]
        },
        {
          id: 2,
          name: '点击改变',
          list: [
            {
              childid: '2.1',
              childname: '子项，点我改变'
            }, {
              childid: '2.2',
              childname: '子项，点我改变'
            }, {
              childid: '2.3',
              childname: '子项，点我改变'
            }
          ]
        },
        {
          id: 3,
          name: '点击改变',
          list: [
            {
              childid: '3.1',
              childname: '子项，点我改变'
            }
          ]
        }
      ]
    },

    computed: {
      testcomputed () {
        return 'computed - ' + this.mynum;
      }
    },

    methods: {
      plus () {
        this.mynum++
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        });
      },
      mixintap () {
        console.log('do noting from ' + this.$is);
      },
      communicate () {
        let counters = this.$children.filter((com) => com.$is === 'components/counter');

        // Get children counter
        counters[0].num++;
        counters[1].num--;

        eventHub.$emit('app-launch', {a: 1}, {b: 2});
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wx.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              if (d.statusCode !== 200) {
                self.netrst += d.statusCode + '.';
              } else {
                self.netrst += d.data + '.';
              }
            }
          })
        }
      },
      counterEmit (...args) {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    },


    created () {
      let self = this
      self.normalTitle = '标题已被修改';

      self.setTimeoutTitle = '标题三秒后会被修改';
      setTimeout(() => {
        self.setTimeoutTitle = '到三秒了';
      }, 3000);

      wx.getUserInfo({
        success (res) {
          self.userInfo = res.userInfo;
        }
      });
    }
  });
</script>
<config>
{
    navigationBarTitleText: 'WePY 2.0 Feature Demo',
    usingComponents: {
      panel: '~@/components/panel',
      counter: '~counter',
      list: '../components/list',
      group: '../components/group',
    }
}
</config>
